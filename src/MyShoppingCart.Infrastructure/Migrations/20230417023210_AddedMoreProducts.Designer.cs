// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyShoppingCart.Infrastructure;

#nullable disable

namespace MyShoppingCart.Infrastructure.Migrations
{
    [DbContext(typeof(MyShoppingCartContext))]
    [Migration("20230417023210_AddedMoreProducts")]
    partial class AddedMoreProducts
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Role", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("28ca8ce6-cf1d-42b5-da12-08db3ba8f22d"),
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = new Guid("357b00a9-eb69-4632-da13-08db3ba8f22d"),
                            Name = "Customer",
                            NormalizedName = "CUSTOMER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaim", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaim", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier",
                            ClaimValue = "4A5EB696-7C8F-47D4-974B-C1DA72CEC2C5",
                            UserId = new Guid("4a5eb696-7c8f-47d4-974b-c1da72cec2c5")
                        },
                        new
                        {
                            Id = 2,
                            ClaimType = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier",
                            ClaimValue = "79F42C77-83E5-403B-9EC1-6A3FF285C5AC",
                            UserId = new Guid("79f42c77-83e5-403b-9ec1-6a3ff285c5ac")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogin", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRole", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("79f42c77-83e5-403b-9ec1-6a3ff285c5ac"),
                            RoleId = new Guid("28ca8ce6-cf1d-42b5-da12-08db3ba8f22d")
                        },
                        new
                        {
                            UserId = new Guid("4a5eb696-7c8f-47d4-974b-c1da72cec2c5"),
                            RoleId = new Guid("357b00a9-eb69-4632-da13-08db3ba8f22d")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserToken", (string)null);
                });

            modelBuilder.Entity("MyShoppingCart.Domain.Entities.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.ToTable("Address", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("786de95e-2d4c-4524-ac64-6ddf11ad9ec5"),
                            City = "Bedrock",
                            PostalCode = "12345",
                            State = "MO",
                            Street = "123 Test St"
                        },
                        new
                        {
                            Id = new Guid("6b760260-799c-4af1-a173-0bf83a2a74d5"),
                            City = "Bedrock",
                            PostalCode = "12345",
                            State = "MO",
                            Street = "123 Test St"
                        },
                        new
                        {
                            Id = new Guid("b592fa04-541a-4bf2-967c-c07468af2014"),
                            City = "Space City",
                            PostalCode = "12345",
                            State = "MO",
                            Street = "123 Test St"
                        },
                        new
                        {
                            Id = new Guid("ccb9f54b-f5a0-4d42-927d-c65294e0f629"),
                            City = "Space City",
                            PostalCode = "12345",
                            State = "MO",
                            Street = "123 Test St"
                        });
                });

            modelBuilder.Entity("MyShoppingCart.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("2478b36b-05f0-4c89-97ab-1a2b8dd0158b"),
                            Name = "Athletic"
                        },
                        new
                        {
                            Id = new Guid("afa2903e-6595-4f62-9bc2-577f0399ce18"),
                            Name = "Gum"
                        },
                        new
                        {
                            Id = new Guid("5202cc15-64bb-4c2b-8bd3-bb9190782a31"),
                            Name = "Cereal"
                        },
                        new
                        {
                            Id = new Guid("31654a1c-14d6-47e5-bdf6-0c158aad9cc9"),
                            Name = "Food"
                        },
                        new
                        {
                            Id = new Guid("592ca9e1-89ee-4807-8070-7e4fe75ce92f"),
                            Name = "Beverage"
                        },
                        new
                        {
                            Id = new Guid("c231f98e-f62e-4672-a12c-18c98b7e7669"),
                            Name = "Clothing"
                        },
                        new
                        {
                            Id = new Guid("5330fda9-5934-4d84-936e-7e910ee66cd6"),
                            Name = "Collectable"
                        },
                        new
                        {
                            Id = new Guid("663ac0e4-6265-417c-89e8-968b42077169"),
                            Name = "Toy/Game"
                        },
                        new
                        {
                            Id = new Guid("a306808a-6156-44b9-8dab-07f05039fa33"),
                            Name = "Pet"
                        },
                        new
                        {
                            Id = new Guid("a303508a-6156-44b9-8dab-07f05039fa33"),
                            Name = "Electronics"
                        });
                });

            modelBuilder.Entity("MyShoppingCart.Domain.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<Guid?>("BillingAddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ShippingAddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("BillingAddressId")
                        .IsUnique()
                        .HasFilter("[BillingAddressId] IS NOT NULL");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("ShippingAddressId")
                        .IsUnique()
                        .HasFilter("[ShippingAddressId] IS NOT NULL");

                    b.ToTable("Customer", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("4a5eb696-7c8f-47d4-974b-c1da72cec2c5"),
                            AccessFailedCount = 0,
                            BillingAddressId = new Guid("786de95e-2d4c-4524-ac64-6ddf11ad9ec5"),
                            ConcurrencyStamp = "998eaff7-78dd-4efc-a16e-5a23a4053398",
                            Email = "fred.flintstone@test.com",
                            EmailConfirmed = true,
                            FirstName = "Fred",
                            LastName = "Flintstone",
                            LockoutEnabled = false,
                            NormalizedEmail = "FRED.FLINTSTONE@TEST.COM",
                            NormalizedUserName = "FRED.FLINTSTONE",
                            PasswordHash = "AQAAAAIAAYagAAAAEKy9NjMnPf12p4csSvLOiAmdC5zHZnhaF1DkgGH7+e9im6aIuYftYn/cqQP5qgDgLA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "DVI25ATQSEVFM2MVEPL45HBEWPLT6DNG",
                            ShippingAddressId = new Guid("6b760260-799c-4af1-a173-0bf83a2a74d5"),
                            TwoFactorEnabled = false,
                            UserName = "fred.flintstone"
                        },
                        new
                        {
                            Id = new Guid("79f42c77-83e5-403b-9ec1-6a3ff285c5ac"),
                            AccessFailedCount = 0,
                            BillingAddressId = new Guid("b592fa04-541a-4bf2-967c-c07468af2014"),
                            ConcurrencyStamp = "02fe5045-5c7b-4641-90a0-e9c5d375fb7b",
                            Email = "george.jetson@test.com",
                            EmailConfirmed = true,
                            FirstName = "George",
                            LastName = "Jetson",
                            LockoutEnabled = false,
                            NormalizedEmail = "GEORGE.JETSON@TEST.COM",
                            NormalizedUserName = "GEORGE.JETSON",
                            PasswordHash = "AQAAAAIAAYagAAAAEOt9l5axpZkFW3JyiZaAgn7QpKHgMetmUYNsLd7fovRZV9fvV+OLXPGdNntgfK4pDw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "HKNQOHKL7CB4G3TH257MX3QYRBOPMIED",
                            ShippingAddressId = new Guid("ccb9f54b-f5a0-4d42-927d-c65294e0f629"),
                            TwoFactorEnabled = false,
                            UserName = "george.jetson"
                        });
                });

            modelBuilder.Entity("MyShoppingCart.Domain.Entities.LineItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("LineItem", (string)null);
                });

            modelBuilder.Entity("MyShoppingCart.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OrderDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("CustomerId");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("MyShoppingCart.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasPrecision(7, 2)
                        .HasColumnType("decimal(7,2)");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.ToTable("Product", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("7bc8ae1b-031a-4f3a-815c-2111288ff58c"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "Nike Tennis Shoes",
                            Price = 100.00m
                        },
                        new
                        {
                            Id = new Guid("9955f4d7-3e40-4111-a76d-23406f93334b"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "Fruit Stripe Gum",
                            Price = 1.99m
                        },
                        new
                        {
                            Id = new Guid("ad7d0cf7-ce00-477d-ae2a-5691f65eba0e"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "Cheerios",
                            Price = 6.00m
                        },
                        new
                        {
                            Id = new Guid("e226d6b2-324f-4508-b5e5-0db77b345c69"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "7Up 16oz Bottle",
                            Price = 1.50m
                        },
                        new
                        {
                            Id = new Guid("e3b2bcce-a8f4-4f7e-9c9e-6ac93e03554a"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "A Plaid Flannel Shirt",
                            Price = 20.00m
                        },
                        new
                        {
                            Id = new Guid("1caa7fb0-8c2e-4304-a1ec-747a89623131"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "Garbage Pale Kids Stickers",
                            Price = 4.00m
                        },
                        new
                        {
                            Id = new Guid("a9c15177-e1a4-4dc8-bcb0-5d78128fdeae"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "Pink Stuffed Dinosaur",
                            Price = 15.99m
                        },
                        new
                        {
                            Id = new Guid("24ef70c3-0fc1-48d7-994f-380d4c533419"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "Black Trenchcoat",
                            Price = 100.00m
                        },
                        new
                        {
                            Id = new Guid("2df1a80e-651a-417a-9028-b81d30a9a26e"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "Monopoly",
                            Price = 100.00m
                        },
                        new
                        {
                            Id = new Guid("0553ca62-284d-4379-afc5-c2d4903f7a4c"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            ImageUrl = "/img/dog_collar.jpg",
                            Name = "A Dog Collar",
                            Price = 100.00m
                        },
                        new
                        {
                            Id = new Guid("1539ce54-3d94-4a0f-9580-da51123797cb"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "Hubba Bubba Bubble Gum",
                            Price = 100.00m
                        },
                        new
                        {
                            Id = new Guid("5b858f9e-1f64-47b0-841f-14604a9d4035"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "Spearmint Gum",
                            Price = 100.00m
                        },
                        new
                        {
                            Id = new Guid("092fa47a-da69-4514-985e-7eed2739d817"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "Big League Chew Bubble Gum",
                            Price = 100.00m
                        },
                        new
                        {
                            Id = new Guid("430f8382-69c8-473f-a74f-a244a77133ae"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "Adidas Tennis Shoes",
                            Price = 100.00m
                        },
                        new
                        {
                            Id = new Guid("77122595-d2ef-4b4b-8841-c6a5fb91acfe"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "Tennis Racket",
                            Price = 100.00m
                        },
                        new
                        {
                            Id = new Guid("f7246fc8-8a97-4b0b-8fd6-21bb0287b6eb"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "Golf Clubs",
                            Price = 100.00m
                        },
                        new
                        {
                            Id = new Guid("e53ce73a-3e50-4498-9c51-ef0df346a3c2"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "Fruit Loops",
                            Price = 100.00m
                        },
                        new
                        {
                            Id = new Guid("11126500-2f81-4b90-88cb-84d8378e6d6b"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "Mountain Dew 16oz Bottle",
                            Price = 100.00m
                        },
                        new
                        {
                            Id = new Guid("24181791-37f3-4af6-95e3-4a17409cc1be"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "Sweet Tea 16oz Bottle",
                            Price = 100.00m
                        },
                        new
                        {
                            Id = new Guid("64068786-c23f-4904-bc30-d297fe71eb6f"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "A Pair of Blue Jeans",
                            Price = 100.00m
                        },
                        new
                        {
                            Id = new Guid("3ab12432-5d93-496e-83c9-5929514f82b5"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "A 4-Pack of T-Shirts",
                            Price = 100.00m
                        },
                        new
                        {
                            Id = new Guid("678c8fc3-8156-45f0-8a0a-04d747442cf9"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "Long Underwear",
                            Price = 100.00m
                        },
                        new
                        {
                            Id = new Guid("58a0114b-e802-40d4-9b0b-7187b77eb30c"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "A Pack of Pokemon Cards",
                            Price = 100.00m
                        },
                        new
                        {
                            Id = new Guid("9fc97e4a-5b6c-4cbd-a4ce-35bfdb49bb05"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "A Pack of Baseball Cards",
                            Price = 100.00m
                        },
                        new
                        {
                            Id = new Guid("13ae159d-4f77-4b31-9a99-1df06086a26d"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "G.I. Joe Action Figure",
                            Price = 100.00m
                        },
                        new
                        {
                            Id = new Guid("31e90811-9d42-4459-903c-5092d21f992f"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "A Green Hoodie",
                            Price = 100.00m
                        },
                        new
                        {
                            Id = new Guid("32aa1795-2bbf-4a94-bacf-334fbf72a49b"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "A Baseball Cap",
                            Price = 100.00m
                        },
                        new
                        {
                            Id = new Guid("424f2a29-f09d-43e9-a28e-7fd1750f4102"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "A Baseball Glove",
                            Price = 100.00m
                        },
                        new
                        {
                            Id = new Guid("d71023e3-93b6-45a6-a5c0-1fdda2d4a1cf"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "A Hockey Stick",
                            Price = 100.00m
                        },
                        new
                        {
                            Id = new Guid("6ca7d4d7-2d22-4481-b39d-890c515a20fe"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "Cowboy Boots",
                            Price = 100.00m
                        },
                        new
                        {
                            Id = new Guid("b59eaa64-45f5-4b90-83fa-16235af1e5e3"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "Sweat Pants",
                            Price = 100.00m
                        },
                        new
                        {
                            Id = new Guid("99ebc170-e52d-4e52-b4ac-1abbbfb799a5"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "A Clock Radio",
                            Price = 100.00m
                        },
                        new
                        {
                            Id = new Guid("32fce956-7878-4eba-bc57-c850d58add33"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "A Boombox",
                            Price = 100.00m
                        },
                        new
                        {
                            Id = new Guid("35afde2a-7889-43e8-925c-09b65f05c849"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "64gb iPod",
                            Price = 100.00m
                        },
                        new
                        {
                            Id = new Guid("88f90070-9bfb-4722-a802-a58e4459f625"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "32gb iPod",
                            Price = 100.00m
                        },
                        new
                        {
                            Id = new Guid("a6ebec19-67b5-4286-a634-a5994f332f4c"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "Sony 42-Inch Television",
                            Price = 100.00m
                        },
                        new
                        {
                            Id = new Guid("a145dfbd-eefe-411c-8d6d-3feaf0747231"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "Visio 46-Inch Television",
                            Price = 100.00m
                        },
                        new
                        {
                            Id = new Guid("c042cee5-b114-4fa3-8ba6-64b180ff128e"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "A 5-Foot Leash",
                            Price = 100.00m
                        },
                        new
                        {
                            Id = new Guid("f85c2129-dc48-494e-a551-6fa684e77142"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "A 20lb Bag of Cat Food",
                            Price = 100.00m
                        },
                        new
                        {
                            Id = new Guid("9be0417a-8c93-4cde-9d6c-79a15996b5a3"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "A 20lb Bag of Kitty Litter",
                            Price = 100.00m
                        },
                        new
                        {
                            Id = new Guid("6d761b94-26b6-4b15-a585-8c7dd15f8e4d"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "A 20lb Bag of Dog Food",
                            Price = 100.00m
                        },
                        new
                        {
                            Id = new Guid("916d84a6-727a-4aa5-b742-562815b28297"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "12 Pack of HotDog Buns",
                            Price = 100.00m
                        },
                        new
                        {
                            Id = new Guid("397387de-29aa-47cd-83b1-2e1e242bbfed"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "10 Pack of HotDogs",
                            Price = 100.00m
                        },
                        new
                        {
                            Id = new Guid("bc4766e4-fbb4-4384-b3b8-bb5c3d7cb0b0"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "1lb of Bacon",
                            Price = 100.00m
                        },
                        new
                        {
                            Id = new Guid("a922340c-81bc-4189-9060-56b796ff954e"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "A Dozen Donuts",
                            Price = 100.00m
                        },
                        new
                        {
                            Id = new Guid("54e911e5-a9db-423a-b284-cadcd559b30b"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "Lite Brite",
                            Price = 100.00m
                        },
                        new
                        {
                            Id = new Guid("e6e7723f-0b6c-4c37-b259-18de64d486cb"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "Barrel of Monkeys",
                            Price = 9.00m
                        },
                        new
                        {
                            Id = new Guid("8399bba9-b3eb-4e2b-9261-b6f38163f114"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "Rubik's Cube",
                            Price = 10.00m
                        },
                        new
                        {
                            Id = new Guid("10735d96-d843-4835-9312-4d19aa92bf5f"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "Hungry Hungry Hippos",
                            Price = 16.00m
                        },
                        new
                        {
                            Id = new Guid("24f97fd4-f17a-4bf3-998c-99c2ba557101"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "Connect4",
                            Price = 18.00m
                        },
                        new
                        {
                            Id = new Guid("41ab5b04-f9f1-4e49-8004-246fe79f6136"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "Dungeons and Dragons Rulebook",
                            Price = 50.00m
                        },
                        new
                        {
                            Id = new Guid("70ab156e-d382-4d9f-b48a-8efa1e74c2b7"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "A Gallon of Sweet Tea",
                            Price = 8.00m
                        },
                        new
                        {
                            Id = new Guid("b10f29d8-addc-4fd2-81bb-b3084db31018"),
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Interdum varius sit amet mattis.",
                            Name = "12 Pack of Beer",
                            Price = 15.00m
                        });
                });

            modelBuilder.Entity("MyShoppingCart.Domain.Entities.ProductCategory", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductCategory", (string)null);

                    b.HasData(
                        new
                        {
                            ProductId = new Guid("7bc8ae1b-031a-4f3a-815c-2111288ff58c"),
                            CategoryId = new Guid("2478b36b-05f0-4c89-97ab-1a2b8dd0158b")
                        },
                        new
                        {
                            ProductId = new Guid("9955f4d7-3e40-4111-a76d-23406f93334b"),
                            CategoryId = new Guid("afa2903e-6595-4f62-9bc2-577f0399ce18")
                        },
                        new
                        {
                            ProductId = new Guid("ad7d0cf7-ce00-477d-ae2a-5691f65eba0e"),
                            CategoryId = new Guid("5202cc15-64bb-4c2b-8bd3-bb9190782a31")
                        },
                        new
                        {
                            ProductId = new Guid("ad7d0cf7-ce00-477d-ae2a-5691f65eba0e"),
                            CategoryId = new Guid("31654a1c-14d6-47e5-bdf6-0c158aad9cc9")
                        },
                        new
                        {
                            ProductId = new Guid("e226d6b2-324f-4508-b5e5-0db77b345c69"),
                            CategoryId = new Guid("592ca9e1-89ee-4807-8070-7e4fe75ce92f")
                        },
                        new
                        {
                            ProductId = new Guid("e3b2bcce-a8f4-4f7e-9c9e-6ac93e03554a"),
                            CategoryId = new Guid("c231f98e-f62e-4672-a12c-18c98b7e7669")
                        },
                        new
                        {
                            ProductId = new Guid("1caa7fb0-8c2e-4304-a1ec-747a89623131"),
                            CategoryId = new Guid("5330fda9-5934-4d84-936e-7e910ee66cd6")
                        },
                        new
                        {
                            ProductId = new Guid("a9c15177-e1a4-4dc8-bcb0-5d78128fdeae"),
                            CategoryId = new Guid("663ac0e4-6265-417c-89e8-968b42077169")
                        },
                        new
                        {
                            ProductId = new Guid("24ef70c3-0fc1-48d7-994f-380d4c533419"),
                            CategoryId = new Guid("c231f98e-f62e-4672-a12c-18c98b7e7669")
                        },
                        new
                        {
                            ProductId = new Guid("2df1a80e-651a-417a-9028-b81d30a9a26e"),
                            CategoryId = new Guid("663ac0e4-6265-417c-89e8-968b42077169")
                        },
                        new
                        {
                            ProductId = new Guid("0553ca62-284d-4379-afc5-c2d4903f7a4c"),
                            CategoryId = new Guid("a306808a-6156-44b9-8dab-07f05039fa33")
                        },
                        new
                        {
                            ProductId = new Guid("1539ce54-3d94-4a0f-9580-da51123797cb"),
                            CategoryId = new Guid("afa2903e-6595-4f62-9bc2-577f0399ce18")
                        },
                        new
                        {
                            ProductId = new Guid("5b858f9e-1f64-47b0-841f-14604a9d4035"),
                            CategoryId = new Guid("afa2903e-6595-4f62-9bc2-577f0399ce18")
                        },
                        new
                        {
                            ProductId = new Guid("092fa47a-da69-4514-985e-7eed2739d817"),
                            CategoryId = new Guid("afa2903e-6595-4f62-9bc2-577f0399ce18")
                        },
                        new
                        {
                            ProductId = new Guid("430f8382-69c8-473f-a74f-a244a77133ae"),
                            CategoryId = new Guid("2478b36b-05f0-4c89-97ab-1a2b8dd0158b")
                        },
                        new
                        {
                            ProductId = new Guid("77122595-d2ef-4b4b-8841-c6a5fb91acfe"),
                            CategoryId = new Guid("2478b36b-05f0-4c89-97ab-1a2b8dd0158b")
                        },
                        new
                        {
                            ProductId = new Guid("f7246fc8-8a97-4b0b-8fd6-21bb0287b6eb"),
                            CategoryId = new Guid("2478b36b-05f0-4c89-97ab-1a2b8dd0158b")
                        },
                        new
                        {
                            ProductId = new Guid("e53ce73a-3e50-4498-9c51-ef0df346a3c2"),
                            CategoryId = new Guid("592ca9e1-89ee-4807-8070-7e4fe75ce92f")
                        },
                        new
                        {
                            ProductId = new Guid("11126500-2f81-4b90-88cb-84d8378e6d6b"),
                            CategoryId = new Guid("592ca9e1-89ee-4807-8070-7e4fe75ce92f")
                        },
                        new
                        {
                            ProductId = new Guid("24181791-37f3-4af6-95e3-4a17409cc1be"),
                            CategoryId = new Guid("592ca9e1-89ee-4807-8070-7e4fe75ce92f")
                        },
                        new
                        {
                            ProductId = new Guid("64068786-c23f-4904-bc30-d297fe71eb6f"),
                            CategoryId = new Guid("c231f98e-f62e-4672-a12c-18c98b7e7669")
                        },
                        new
                        {
                            ProductId = new Guid("3ab12432-5d93-496e-83c9-5929514f82b5"),
                            CategoryId = new Guid("c231f98e-f62e-4672-a12c-18c98b7e7669")
                        },
                        new
                        {
                            ProductId = new Guid("678c8fc3-8156-45f0-8a0a-04d747442cf9"),
                            CategoryId = new Guid("c231f98e-f62e-4672-a12c-18c98b7e7669")
                        },
                        new
                        {
                            ProductId = new Guid("58a0114b-e802-40d4-9b0b-7187b77eb30c"),
                            CategoryId = new Guid("5330fda9-5934-4d84-936e-7e910ee66cd6")
                        },
                        new
                        {
                            ProductId = new Guid("9fc97e4a-5b6c-4cbd-a4ce-35bfdb49bb05"),
                            CategoryId = new Guid("5330fda9-5934-4d84-936e-7e910ee66cd6")
                        },
                        new
                        {
                            ProductId = new Guid("13ae159d-4f77-4b31-9a99-1df06086a26d"),
                            CategoryId = new Guid("663ac0e4-6265-417c-89e8-968b42077169")
                        },
                        new
                        {
                            ProductId = new Guid("31e90811-9d42-4459-903c-5092d21f992f"),
                            CategoryId = new Guid("c231f98e-f62e-4672-a12c-18c98b7e7669")
                        },
                        new
                        {
                            ProductId = new Guid("32aa1795-2bbf-4a94-bacf-334fbf72a49b"),
                            CategoryId = new Guid("2478b36b-05f0-4c89-97ab-1a2b8dd0158b")
                        },
                        new
                        {
                            ProductId = new Guid("424f2a29-f09d-43e9-a28e-7fd1750f4102"),
                            CategoryId = new Guid("2478b36b-05f0-4c89-97ab-1a2b8dd0158b")
                        },
                        new
                        {
                            ProductId = new Guid("d71023e3-93b6-45a6-a5c0-1fdda2d4a1cf"),
                            CategoryId = new Guid("2478b36b-05f0-4c89-97ab-1a2b8dd0158b")
                        },
                        new
                        {
                            ProductId = new Guid("6ca7d4d7-2d22-4481-b39d-890c515a20fe"),
                            CategoryId = new Guid("c231f98e-f62e-4672-a12c-18c98b7e7669")
                        },
                        new
                        {
                            ProductId = new Guid("b59eaa64-45f5-4b90-83fa-16235af1e5e3"),
                            CategoryId = new Guid("c231f98e-f62e-4672-a12c-18c98b7e7669")
                        },
                        new
                        {
                            ProductId = new Guid("99ebc170-e52d-4e52-b4ac-1abbbfb799a5"),
                            CategoryId = new Guid("a303508a-6156-44b9-8dab-07f05039fa33")
                        },
                        new
                        {
                            ProductId = new Guid("32fce956-7878-4eba-bc57-c850d58add33"),
                            CategoryId = new Guid("a303508a-6156-44b9-8dab-07f05039fa33")
                        },
                        new
                        {
                            ProductId = new Guid("35afde2a-7889-43e8-925c-09b65f05c849"),
                            CategoryId = new Guid("a303508a-6156-44b9-8dab-07f05039fa33")
                        },
                        new
                        {
                            ProductId = new Guid("88f90070-9bfb-4722-a802-a58e4459f625"),
                            CategoryId = new Guid("a303508a-6156-44b9-8dab-07f05039fa33")
                        },
                        new
                        {
                            ProductId = new Guid("a6ebec19-67b5-4286-a634-a5994f332f4c"),
                            CategoryId = new Guid("a303508a-6156-44b9-8dab-07f05039fa33")
                        },
                        new
                        {
                            ProductId = new Guid("a145dfbd-eefe-411c-8d6d-3feaf0747231"),
                            CategoryId = new Guid("a303508a-6156-44b9-8dab-07f05039fa33")
                        },
                        new
                        {
                            ProductId = new Guid("c042cee5-b114-4fa3-8ba6-64b180ff128e"),
                            CategoryId = new Guid("a306808a-6156-44b9-8dab-07f05039fa33")
                        },
                        new
                        {
                            ProductId = new Guid("f85c2129-dc48-494e-a551-6fa684e77142"),
                            CategoryId = new Guid("a306808a-6156-44b9-8dab-07f05039fa33")
                        },
                        new
                        {
                            ProductId = new Guid("9be0417a-8c93-4cde-9d6c-79a15996b5a3"),
                            CategoryId = new Guid("a306808a-6156-44b9-8dab-07f05039fa33")
                        },
                        new
                        {
                            ProductId = new Guid("6d761b94-26b6-4b15-a585-8c7dd15f8e4d"),
                            CategoryId = new Guid("a306808a-6156-44b9-8dab-07f05039fa33")
                        },
                        new
                        {
                            ProductId = new Guid("916d84a6-727a-4aa5-b742-562815b28297"),
                            CategoryId = new Guid("31654a1c-14d6-47e5-bdf6-0c158aad9cc9")
                        },
                        new
                        {
                            ProductId = new Guid("397387de-29aa-47cd-83b1-2e1e242bbfed"),
                            CategoryId = new Guid("31654a1c-14d6-47e5-bdf6-0c158aad9cc9")
                        },
                        new
                        {
                            ProductId = new Guid("bc4766e4-fbb4-4384-b3b8-bb5c3d7cb0b0"),
                            CategoryId = new Guid("31654a1c-14d6-47e5-bdf6-0c158aad9cc9")
                        },
                        new
                        {
                            ProductId = new Guid("a922340c-81bc-4189-9060-56b796ff954e"),
                            CategoryId = new Guid("31654a1c-14d6-47e5-bdf6-0c158aad9cc9")
                        },
                        new
                        {
                            ProductId = new Guid("54e911e5-a9db-423a-b284-cadcd559b30b"),
                            CategoryId = new Guid("663ac0e4-6265-417c-89e8-968b42077169")
                        },
                        new
                        {
                            ProductId = new Guid("e6e7723f-0b6c-4c37-b259-18de64d486cb"),
                            CategoryId = new Guid("663ac0e4-6265-417c-89e8-968b42077169")
                        },
                        new
                        {
                            ProductId = new Guid("8399bba9-b3eb-4e2b-9261-b6f38163f114"),
                            CategoryId = new Guid("663ac0e4-6265-417c-89e8-968b42077169")
                        },
                        new
                        {
                            ProductId = new Guid("10735d96-d843-4835-9312-4d19aa92bf5f"),
                            CategoryId = new Guid("663ac0e4-6265-417c-89e8-968b42077169")
                        },
                        new
                        {
                            ProductId = new Guid("24f97fd4-f17a-4bf3-998c-99c2ba557101"),
                            CategoryId = new Guid("663ac0e4-6265-417c-89e8-968b42077169")
                        },
                        new
                        {
                            ProductId = new Guid("41ab5b04-f9f1-4e49-8004-246fe79f6136"),
                            CategoryId = new Guid("663ac0e4-6265-417c-89e8-968b42077169")
                        },
                        new
                        {
                            ProductId = new Guid("70ab156e-d382-4d9f-b48a-8efa1e74c2b7"),
                            CategoryId = new Guid("592ca9e1-89ee-4807-8070-7e4fe75ce92f")
                        },
                        new
                        {
                            ProductId = new Guid("b10f29d8-addc-4fd2-81bb-b3084db31018"),
                            CategoryId = new Guid("592ca9e1-89ee-4807-8070-7e4fe75ce92f")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("MyShoppingCart.Domain.Entities.Customer", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("MyShoppingCart.Domain.Entities.Customer", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyShoppingCart.Domain.Entities.Customer", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("MyShoppingCart.Domain.Entities.Customer", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyShoppingCart.Domain.Entities.Customer", b =>
                {
                    b.HasOne("MyShoppingCart.Domain.Entities.Address", "BillingAddress")
                        .WithOne()
                        .HasForeignKey("MyShoppingCart.Domain.Entities.Customer", "BillingAddressId");

                    b.HasOne("MyShoppingCart.Domain.Entities.Address", "ShippingAddress")
                        .WithOne()
                        .HasForeignKey("MyShoppingCart.Domain.Entities.Customer", "ShippingAddressId");

                    b.Navigation("BillingAddress");

                    b.Navigation("ShippingAddress");
                });

            modelBuilder.Entity("MyShoppingCart.Domain.Entities.LineItem", b =>
                {
                    b.HasOne("MyShoppingCart.Domain.Entities.Order", null)
                        .WithMany("LineItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyShoppingCart.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MyShoppingCart.Domain.Entities.Order", b =>
                {
                    b.HasOne("MyShoppingCart.Domain.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("MyShoppingCart.Domain.Entities.ProductCategory", b =>
                {
                    b.HasOne("MyShoppingCart.Domain.Entities.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyShoppingCart.Domain.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyShoppingCart.Domain.Entities.Order", b =>
                {
                    b.Navigation("LineItems");
                });
#pragma warning restore 612, 618
        }
    }
}
